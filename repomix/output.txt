This file is a merged representation of the entire codebase, combined into a single document by Repomix.
The content has been processed where line numbers have been added.

<directory_structure>
components/
  ui/
    button.tsx
  Layout.tsx
lib/
  utils.ts
pages/
  api/
    hello.ts
  _app.tsx
  _document.tsx
  index.tsx
public/
  file.svg
  globe.svg
  next.svg
  vercel.svg
  window.svg
styles/
  globals.css
.eslintrc.json
.gitignore
eslint.config.mjs
file.svg
globe.svg
next-env.d.ts
next.config.js
next.svg
package.json
postcss.config.js
postcss.config.mjs
tailwind.config.js
tsconfig.json
vercel.svg
window.svg
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="components/ui/button.tsx">
 1: import * as React from "react";
 2: import { cn } from "@/lib/utils";
 3: 
 4: /**
 5:  * Button component props
 6:  *
 7:  * @interface ButtonProps
 8:  * @extends {React.ButtonHTMLAttributes<HTMLButtonElement>}
 9:  */
10: export interface ButtonProps
11:   extends React.ButtonHTMLAttributes<HTMLButtonElement> {
12:   /**
13:    * The variant style of the button
14:    */
15:   variant?: "default" | "outline" | "ghost";
16: }
17: 
18: /**
19:  * Button component
20:  *
21:  * A reusable button component with different style variants
22:  *
23:  * @param {ButtonProps} props - Component properties
24:  * @returns {JSX.Element} The button component
25:  */
26: const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
27:   ({ className, variant = "default", ...props }, ref) => {
28:     // Different styling based on variant
29:     const variantStyles = {
30:       default: "bg-primary text-primary-foreground hover:bg-primary/90",
31:       outline:
32:         "border border-input bg-transparent hover:bg-accent hover:text-accent-foreground",
33:       ghost: "hover:bg-accent hover:text-accent-foreground",
34:     };
35: 
36:     return (
37:       <button
38:         className={cn(
39:           "inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50",
40:           variantStyles[variant],
41:           className
42:         )}
43:         ref={ref}
44:         {...props}
45:       />
46:     );
47:   }
48: );
49: 
50: Button.displayName = "Button";
51: 
52: export { Button };
</file>

<file path="components/Layout.tsx">
 1: import React from "react";
 2: 
 3: /**
 4:  * Props for the Layout component
 5:  *
 6:  * @interface LayoutProps
 7:  * @property {React.ReactNode} children - The content to render inside the layout
 8:  * @property {string} [title] - The page title
 9:  * @property {string} [description] - The page meta description
10:  */
11: interface LayoutProps {
12:   children: React.ReactNode;
13:   title?: string;
14:   description?: string;
15: }
16: 
17: /**
18:  * Layout component that wraps all pages
19:  *
20:  * Provides consistent page structure with head metadata
21:  *
22:  * @param {LayoutProps} props - Component props
23:  * @returns {JSX.Element} The layout component
24:  */
25: export function Layout({ children }: LayoutProps): JSX.Element {
26:   return <div className="min-h-screen font-sans">{children}</div>;
27: }
</file>

<file path="lib/utils.ts">
 1: import { type ClassValue, clsx } from "clsx";
 2: import { twMerge } from "tailwind-merge";
 3: 
 4: /**
 5:  * Merges class names using clsx and tailwind-merge
 6:  *
 7:  * This utility function combines multiple class names into a single string,
 8:  * resolving Tailwind CSS conflicts by using tailwind-merge.
 9:  *
10:  * @param {ClassValue[]} inputs - Class names or conditional class objects to merge
11:  * @returns {string} A merged string of class names
12:  */
13: export function cn(...inputs: ClassValue[]): string {
14:   return twMerge(clsx(inputs));
15: }
</file>

<file path="pages/api/hello.ts">
 1: import type { NextApiRequest, NextApiResponse } from "next";
 2: 
 3: /**
 4:  * Data structure returned by the API
 5:  */
 6: export type HelloResponse = {
 7:   message: string;
 8:   timestamp: string;
 9: };
10: 
11: /**
12:  * API handler function for the /api/hello endpoint
13:  *
14:  * This is a simple example of a Next.js API route that returns
15:  * a JSON response with a message and the current timestamp.
16:  *
17:  * @param {NextApiRequest} req - The HTTP request object
18:  * @param {NextApiResponse<HelloResponse>} res - The HTTP response object
19:  * @returns {void}
20:  */
21: export default function handler(
22:   req: NextApiRequest,
23:   res: NextApiResponse<HelloResponse>
24: ): void {
25:   // Return a simple response with the current time
26:   res.status(200).json({
27:     message: "Hello from Next.js API!",
28:     timestamp: new Date().toISOString(),
29:   });
30: }
</file>

<file path="pages/_app.tsx">
 1: import type { AppProps } from "next/app";
 2: import { Inter, JetBrains_Mono } from "next/font/google";
 3: import "../styles/globals.css";
 4: 
 5: const inter = Inter({
 6:   subsets: ["latin"],
 7:   variable: "--font-sans",
 8:   display: "swap",
 9: });
10: 
11: const jetbrainsMono = JetBrains_Mono({
12:   subsets: ["latin"],
13:   variable: "--font-mono",
14:   display: "swap",
15: });
16: 
17: export default function App({ Component, pageProps }: AppProps) {
18:   return (
19:     <div className={`${inter.variable} ${jetbrainsMono.variable}`}>
20:       <style jsx global>{`
21:         :root {
22:           --font-sans: ${inter.style.fontFamily};
23:           --font-mono: ${jetbrainsMono.style.fontFamily};
24:         }
25:       `}</style>
26:       <Component {...pageProps} />
27:     </div>
28:   );
29: }
</file>

<file path="pages/_document.tsx">
 1: import { Html, Head, Main, NextScript } from "next/document";
 2: 
 3: export default function Document() {
 4:   return (
 5:     <Html lang="en">
 6:       <Head />
 7:       <body className="min-h-screen bg-background text-foreground antialiased">
 8:         <Main />
 9:         <NextScript />
10:       </body>
11:     </Html>
12:   );
13: }
</file>

<file path="pages/index.tsx">
 1: import { useState } from "react";
 2: import { Layout } from "@/components/Layout";
 3: import { Button } from "@/components/ui/button";
 4: 
 5: /**
 6:  * Home component - Main landing page of the application
 7:  *
 8:  * This is a simple example of a Next.js page with client-side interaction.
 9:  * It shows a text and a button that triggers an API call.
10:  *
11:  * @returns {JSX.Element} The rendered page
12:  */
13: export default function Home(): JSX.Element {
14:   const [message, setMessage] = useState<string | null>(null);
15: 
16:   /**
17:    * Fetches data from the API endpoint when the button is clicked
18:    * Displays the result from the API call
19:    */
20:   const fetchData = async (): Promise<void> => {
21:     try {
22:       const response = await fetch("/api/hello");
23:       const data = await response.json();
24:       setMessage(JSON.stringify(data, null, 2));
25:     } catch (error) {
26:       console.error("Error fetching data:", error);
27:       setMessage("Error fetching data");
28:     }
29:   };
30: 
31:   return (
32:     <Layout
33:       title="Next.js Example"
34:       description="A minimal Next.js example with pages router"
35:     >
36:       <div className="min-h-screen flex flex-col items-center justify-center p-4">
37:         <h1 className="text-2xl font-bold mb-6 text-center">
38:           Next.js 14 with Pages Router
39:         </h1>
40: 
41:         <p className="mb-6 text-center">
42:           This is a minimal example demonstrating a simple page with a button
43:           that calls an API endpoint.
44:         </p>
45: 
46:         <div className="flex flex-col gap-4">
47:           <Button onClick={fetchData} className="w-full">
48:             Call API
49:           </Button>
50: 
51:           {message && (
52:             <div className="p-4 rounded bg-muted overflow-auto max-h-40">
53:               <pre className="text-sm font-mono whitespace-pre-wrap">
54:                 {message}
55:               </pre>
56:             </div>
57:           )}
58:         </div>
59:       </div>
60:     </Layout>
61:   );
62: }
</file>

<file path="public/file.svg">
1: <svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
</file>

<file path="public/globe.svg">
1: <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
</file>

<file path="public/next.svg">
1: <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
</file>

<file path="public/vercel.svg">
1: <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
</file>

<file path="public/window.svg">
1: <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
</file>

<file path="styles/globals.css">
 1: @tailwind base;
 2: @tailwind components;
 3: @tailwind utilities;
 4: 
 5: @layer base {
 6:   :root {
 7:     --background: 0 0% 100%;
 8:     --foreground: 240 10% 3.9%;
 9: 
10:     --card: 0 0% 100%;
11:     --card-foreground: 240 10% 3.9%;
12: 
13:     --popover: 0 0% 100%;
14:     --popover-foreground: 240 10% 3.9%;
15: 
16:     --primary: 240 5.9% 10%;
17:     --primary-foreground: 0 0% 98%;
18: 
19:     --secondary: 240 4.8% 95.9%;
20:     --secondary-foreground: 240 5.9% 10%;
21: 
22:     --muted: 240 4.8% 95.9%;
23:     --muted-foreground: 240 3.8% 46.1%;
24: 
25:     --accent: 240 4.8% 95.9%;
26:     --accent-foreground: 240 5.9% 10%;
27: 
28:     --destructive: 0 84.2% 60.2%;
29:     --destructive-foreground: 0 0% 98%;
30: 
31:     --border: 240 5.9% 90%;
32:     --input: 240 5.9% 90%;
33:     --ring: 240 10% 3.9%;
34: 
35:     --radius: 0.5rem;
36:   }
37: 
38:   .dark {
39:     --background: 240 10% 3.9%;
40:     --foreground: 0 0% 98%;
41: 
42:     --card: 240 10% 3.9%;
43:     --card-foreground: 0 0% 98%;
44: 
45:     --popover: 240 10% 3.9%;
46:     --popover-foreground: 0 0% 98%;
47: 
48:     --primary: 0 0% 98%;
49:     --primary-foreground: 240 5.9% 10%;
50: 
51:     --secondary: 240 3.7% 15.9%;
52:     --secondary-foreground: 0 0% 98%;
53: 
54:     --muted: 240 3.7% 15.9%;
55:     --muted-foreground: 240 5% 64.9%;
56: 
57:     --accent: 240 3.7% 15.9%;
58:     --accent-foreground: 0 0% 98%;
59: 
60:     --destructive: 0 62.8% 30.6%;
61:     --destructive-foreground: 0 0% 98%;
62: 
63:     --border: 240 3.7% 15.9%;
64:     --input: 240 3.7% 15.9%;
65:     --ring: 240 4.9% 83.9%;
66:   }
67: }
68: 
69: @layer base {
70:   * {
71:     @apply border-border;
72:   }
73: 
74:   html {
75:     font-family: var(--font-sans), system-ui, sans-serif;
76:   }
77: 
78:   body {
79:     @apply bg-background text-foreground;
80:     font-feature-settings: "rlig" 1, "calt" 1;
81:   }
82: 
83:   code,
84:   pre,
85:   kbd {
86:     font-family: var(--font-mono), monospace;
87:   }
88: }
</file>

<file path=".eslintrc.json">
1: {
2:   "extends": ["next/core-web-vitals", "plugin:@typescript-eslint/recommended"],
3:   "plugins": ["@typescript-eslint"],
4:   "parser": "@typescript-eslint/parser",
5:   "rules": {
6:     "@typescript-eslint/no-unused-vars": "warn",
7:     "import/no-unresolved": "error"
8:   }
9: }
</file>

<file path=".gitignore">
 1: # dependencies
 2: /node_modules
 3: 
 4: node_modules/
 5: 
 6: /.pnp
 7: .pnp.js
 8: 
 9: # testing
10: /coverage
11: 
12: # next.js
13: /.next/
14: /out/
15: 
16: # production
17: /build
18: 
19: # misc
20: .DS_Store
21: *.pem
22: 
23: # debug
24: npm-debug.log*
25: yarn-debug.log*
26: yarn-error.log*
27: 
28: # local env files
29: .env
30: .env.local
31: .env.development.local
32: .env.test.local
33: .env.production.local
34: 
35: # vercel
36: .vercel
</file>

<file path="eslint.config.mjs">
 1: import { dirname } from "path";
 2: import { fileURLToPath } from "url";
 3: import { FlatCompat } from "@eslint/eslintrc";
 4: 
 5: const __filename = fileURLToPath(import.meta.url);
 6: const __dirname = dirname(__filename);
 7: 
 8: const compat = new FlatCompat({
 9:   baseDirectory: __dirname,
10: });
11: 
12: const eslintConfig = [
13:   ...compat.extends("next/core-web-vitals", "next/typescript"),
14: ];
15: 
16: export default eslintConfig;
</file>

<file path="file.svg">
1: <svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
</file>

<file path="globe.svg">
1: <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
</file>

<file path="next-env.d.ts">
1: /// <reference types="next" />
2: /// <reference types="next/image-types/global" />
3: 
4: // NOTE: This file should not be edited
5: // see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="next.config.js">
 1: /** @type {import('next').NextConfig} */
 2: const nextConfig = {
 3:   reactStrictMode: true,
 4:   async headers() {
 5:     return [
 6:       {
 7:         source: "/(.*)",
 8:         headers: [
 9:           {
10:             key: "Content-Security-Policy",
11:             // For development, we'll allow both http and https for easier testing
12:             value: "frame-ancesters 'self' http: https:;",
13:           },
14:           // Add this header to ensure proper loading in dev mode
15:           {
16:             key: "X-Frame-Options",
17:             value: "ALLOW-FROM http:",
18:           },
19:         ],
20:       },
21:     ];
22:   },
23: };
24: 
25: module.exports = nextConfig;
</file>

<file path="next.svg">
1: <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
</file>

<file path="package.json">
 1: {
 2:   "name": "preconfigured-nextjs-app",
 3:   "version": "0.1.0",
 4:   "private": true,
 5:   "scripts": {
 6:     "dev": "next dev",
 7:     "build": "next build",
 8:     "start": "next start",
 9:     "lint": "next lint --fix",
10:     "type-check": "tsc --noEmit"
11:   },
12:   "dependencies": {
13:     "@radix-ui/react-slot": "^1.1.2",
14:     "class-variance-authority": "^0.7.1",
15:     "clsx": "^2.1.1",
16:     "lucide-react": "0.479.0",
17:     "next": "14.0.4",
18:     "react": "^18.2.0",
19:     "react-dom": "^18.2.0",
20:     "shadcn-ui": "^0.9.5",
21:     "tailwind-merge": "^3.0.2"
22:   },
23:   "devDependencies": {
24:     "@types/node": "^20",
25:     "@types/react": "^18",
26:     "@types/react-dom": "^18",
27:     "@typescript-eslint/eslint-plugin": "^8.26.1",
28:     "@typescript-eslint/parser": "^8.26.1",
29:     "autoprefixer": "^10.4.16",
30:     "eslint": "^8.57.1",
31:     "eslint-config-next": "14.0.4",
32:     "eslint-import-resolver-typescript": "^3.9.1",
33:     "eslint-plugin-import": "^2.31.0",
34:     "postcss": "^8.4.31",
35:     "tailwindcss": "^3.3.0",
36:     "tailwindcss-animate": "^1.0.7",
37:     "typescript": "^5"
38:   }
39: }
</file>

<file path="postcss.config.js">
1: module.exports = {
2:   plugins: {
3:     tailwindcss: {},
4:     autoprefixer: {},
5:   },
6: };
</file>

<file path="postcss.config.mjs">
1: const config = {
2:   plugins: ["@tailwindcss/postcss"],
3: };
4: 
5: export default config;
</file>

<file path="tailwind.config.js">
 1: /** @type {import('tailwindcss').Config} */
 2: module.exports = {
 3:   darkMode: ["class"],
 4:   content: [
 5:     "./pages/**/*.{js,ts,jsx,tsx}",
 6:     "./components/**/*.{js,ts,jsx,tsx}",
 7:   ],
 8:   theme: {
 9:     container: {
10:       center: true,
11:       padding: "2rem",
12:       screens: {
13:         "2xl": "1400px",
14:       },
15:     },
16:     extend: {
17:       fontFamily: {
18:         sans: ["var(--font-sans)"],
19:         mono: ["var(--font-mono)"],
20:       },
21:       colors: {
22:         background: "var(--background)",
23:         foreground: "var(--foreground)",
24:         border: "hsl(var(--border))",
25:         input: "hsl(var(--input))",
26:         ring: "hsl(var(--ring))",
27:         destructive: {
28:           DEFAULT: "hsl(var(--destructive))",
29:           foreground: "hsl(var(--destructive-foreground))",
30:         },
31:         muted: {
32:           DEFAULT: "hsl(var(--muted))",
33:           foreground: "hsl(var(--muted-foreground))",
34:         },
35:         accent: {
36:           DEFAULT: "hsl(var(--accent))",
37:           foreground: "hsl(var(--accent-foreground))",
38:         },
39:         popover: {
40:           DEFAULT: "hsl(var(--popover))",
41:           foreground: "hsl(var(--popover-foreground))",
42:         },
43:         card: {
44:           DEFAULT: "hsl(var(--card))",
45:           foreground: "hsl(var(--card-foreground))",
46:         },
47:         primary: {
48:           DEFAULT: "hsl(var(--primary))",
49:           foreground: "hsl(var(--primary-foreground))",
50:         },
51:         secondary: {
52:           DEFAULT: "hsl(var(--secondary))",
53:           foreground: "hsl(var(--secondary-foreground))",
54:         },
55:       },
56:       borderRadius: {
57:         lg: "var(--radius)",
58:         md: "calc(var(--radius) - 2px)",
59:         sm: "calc(var(--radius) - 4px)",
60:       },
61:       keyframes: {
62:         "accordion-down": {
63:           from: { height: 0 },
64:           to: { height: "var(--radix-accordion-content-height)" },
65:         },
66:         "accordion-up": {
67:           from: { height: "var(--radix-accordion-content-height)" },
68:           to: { height: 0 },
69:         },
70:       },
71:       animation: {
72:         "accordion-down": "accordion-down 0.2s ease-out",
73:         "accordion-up": "accordion-up 0.2s ease-out",
74:       },
75:     },
76:   },
77:   plugins: [require("tailwindcss-animate")],
78: };
</file>

<file path="tsconfig.json">
 1: {
 2:   "compilerOptions": {
 3:     "target": "ES2017",
 4:     "lib": ["dom", "dom.iterable", "esnext"],
 5:     "allowJs": true,
 6:     "skipLibCheck": true,
 7:     "strict": true,
 8:     "noEmit": true,
 9:     "esModuleInterop": true,
10:     "module": "esnext",
11:     "moduleResolution": "bundler",
12:     "resolveJsonModule": true,
13:     "isolatedModules": true,
14:     "jsx": "preserve",
15:     "incremental": true,
16:     "paths": {
17:       "@/*": ["./*"]
18:     }
19:   },
20:   "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
21:   "exclude": ["node_modules"]
22: }
</file>

<file path="vercel.svg">
1: <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
</file>

<file path="window.svg">
1: <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
</file>

</files>
